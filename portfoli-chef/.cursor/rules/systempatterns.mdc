# System Patterns – gerdominweb-app

## Arquitectura del Sistema
**Frontend-only SPA** desarrollada con:
- React (TypeScript)
- Vite como build tool
- TailwindCSS para estilos
- Zustand / React Context API para estado
- LocalStorage como almacenamiento persistente local

## Decisiones Técnicas Clave
- Estructura modular para escalar hacia backend en futuras versiones.
- Uso de componentes de UI basados en Radix + ShadCN.
- Validación de formularios con Zod + React Hook Form.
- Gestión de datos locales sin dependencia de servidor.

## Patrones de Diseño en Uso
- **Atomic Design:** organización por componentes reutilizables.
- **Smart/Dumb Components:** separación lógica entre UI y lógica de negocio.
- **Repository Pattern (futuro):** para interacción con GitHub API o backend.
- **Dark/Light Theme Pattern:** manejado con `next-themes`.

## Relaciones entre Componentes
- **App.tsx:** punto de entrada y router principal.
- **Layout components:** estructura de navegación, footer, y theme toggle.
- **Pages:** vistas de secciones principales (Home, Admin, Certificaciones, Contacto).
- **Components/UI:** elementos reutilizables (cards, modales, formularios).